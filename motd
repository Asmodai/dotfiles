#!/bin/bash

NORM="[0;37m"
BOLD="[1;37m"
DIM="[2;37m"
ITAL="[3;37m"

NPUR="[0;35m"
BPUR="[1;35m"
NWHI="[0;37m"
BWHI="[1;37m"

host=${1:-$(hostname | cut -d. -f1)}
system=$(uname -s)
release=$(uname -r)
machine=$(uname -m)
version=$(uname -v)

case "${host}" in
  berlin)
    system="OpenVMS"
    release="V7.3"
    machine="VAX"
    version="7.3"
    ;;
esac

# Fix up system information.
case "${system}:${version}:${release}" in
    AIX:*:*)
        release="${release}.${version}"
        ;;

    HP-UX:*:*)
        release=$(echo "$release" | cut -d. -f2-)
        ;;

    OSF1:*:*)
        system="OSF/1"
        ;;

    UnixWare:*:*)
        release="$version"
        ;;

    $host:3:*)
        system="AT&T System V"
        ;;

    SunOS:*:5.*)
        system="Solaris";
        release=$(echo ${release} | cut -d. -f2-)
        ;;
esac

# Fix up machine type.
case "${machine}" in
    680?0)   machine="M68K"       ;;
    9000/*)  machine="PA-RISC"    ;;
    IBM,*)   machine="POWER"      ;;
    aarch64) machine="ARM64"      ;;
    alpha)   machine="Alpha"      ;;
    amd64)   machine="AMD64"      ;;
    i86pc)   machine="Intel"      ;;
    i?86)    machine="Intel"      ;;
    m68k)    machine="M68K"       ;;
    sun2)    machine="M68K"       ;;
    sun3)    machine="M68K"       ;;
    sun4m)   machine="MicroSPARC" ;;
    sun4u)   machine="UltraSPARC" ;;
    x86)     machine="Intel"      ;;
    x86_64)  machine="AMD64"      ;;
esac

# Fix up system type.
case "${system}" in
    Linux) system="GNU/Linux" ;;
esac

pretty="${system} ${release} ${machine}"
desc="Yet another Unix host."

case "$host" in
    akira)       desc="Simulated NeXTcomputer."         ;;
    antares)     desc="Simulated NeXTcube."             ;;
    apollo)      desc="Simulated NeXTcube."             ;;
    armstrong)   desc="Retro hardware simulator."       ;;
    axiom)       desc="Symbolics virtual Lisp machine." ;;
    berlin)      desc="Simulated VAXserver 3900."       ;;
    borman)      desc="Simulated AT&T 3B2."             ;;
    bradbury)    desc="Simulated NeXTcube."             ;;
    california)  desc="Simulated NeXTcube."             ;;
    cardenas)    desc="Simulated NeXTcube."             ;;
    centaur)     desc="Simulated NeXTcube."             ;;
    challenger)  desc="GNU/Linux dev workstation."      ;;
    dauntless)   desc="NeXTSTEP developer system."      ;;
    enterprise)  desc="Main GNU/Linux server."          ;;
    epsilon)     desc="Web server."                     ;;
    equinox)     desc="GNU/Linux workstation."          ;;
    excelsior)   desc="HP 715 workstation."             ;;
    farragut)    desc="Streaming system."               ;;
    fisher)      desc="Retro Unix system."              ;;
    galaxy)      desc="OPENSTEP developer system."      ;;
    galileo)     desc="GNU/Linux X terminal."           ;;
    grissom)     desc="OPENSTEP EOF+WOF system."        ;;
    holodeck)    desc="Home automation server."         ;;
    hubble)      desc="Monitoring server."              ;;
    jupiter)     desc="Security monitoring server."     ;;
    kelvin)      desc="Simulated MicroVAX 3900."        ;;
    korolev)     desc="Simulated DEC Alpha."            ;;
    leonov)      desc="Retro Unix system."              ;;
    lovell)      desc="GitLab server."                  ;;
    miranda)     desc="HP 712/60 workstation."          ;;
    nebula)      desc="Home Automation Kiosk."          ;;
    nova)        desc="NeXT NetInfo server."            ;;
    oberon)      desc="OPENSTEP developer system."      ;;
    ptolemy)     desc="Retro Unix NIS/NFS server."      ;;
    reliant)     desc="IBM Model 44p-170."              ;;
    saratoga)    desc="Rhapsody developer system."      ;;
    shepard)     desc="Retro Unix system."              ;;
    shiva)       desc="Raspberry Pi cluster interface." ;;
    sovereign)   desc="GNU/Linux Lisp Machine."         ;;
    ticonderoga) desc="Simulated NeXTcube."             ;;
    voyager)     desc="Main GNU/Linux laptop."          ;;
    walker)      desc="Retro Unix system."              ;;
    wormhole)    desc="Pi-Hole system."                 ;;
    yamato)      desc="Simulated MicroVAX 3900."        ;;
    yeager)      desc="Simulated NeXTcube."             ;;
esac

cat <<EOF

  ${NPUR} _     _          ${BPUR} _   _            _${NORM}
  ${NPUR}| |   (_)___ _ __ ${BPUR}| | | | __ _  ___| | _____ _ __${NORM}
  ${NPUR}| |   | / __| '_ \\${BPUR}| |_| |/ _\` |/ __| |/ / _ \ '__|${NORM}
  ${NPUR}| |___| \__ \ |_) ${BPUR}|  _  | (_| | (__|   <  __/ |${NORM}
  ${NPUR}|_____|_|___/ .__/${BPUR}|_| |_|\__,_|\___|_|\_\___|_|${NORM}${DIM} . ${NORM}uk
  ${NPUR}            |_|

  ${NORM}${NPUR}${DIM}::${NORM} ${BOLD}${BWHI}${host}.home${NORM}
  ${NPUR}${DIM}::${NORM} ${BPUR}${desc}${NORM}
  ${NPUR}${DIM}::${NORM} ${NPUR}${pretty}${NORM}

EOF

# motd ends here.
